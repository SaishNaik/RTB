// Code generated by MockGen. DO NOT EDIT.
// Source: ssp/model (interfaces: IAdSlotModel)

// Package model is a generated GoMock package.
package model

import (
	context "context"
	reflect "reflect"
	mongo "ssp/lib/mongo"
	datastore "ssp/model/datastore"

	gomock "github.com/golang/mock/gomock"
)

// MockIAdSlotModel is a mock of IAdSlotModel interface.
type MockIAdSlotModel struct {
	ctrl     *gomock.Controller
	recorder *MockIAdSlotModelMockRecorder
}

// MockIAdSlotModelMockRecorder is the mock recorder for MockIAdSlotModel.
type MockIAdSlotModelMockRecorder struct {
	mock *MockIAdSlotModel
}

// NewMockIAdSlotModel creates a new mock instance.
func NewMockIAdSlotModel(ctrl *gomock.Controller) *MockIAdSlotModel {
	mock := &MockIAdSlotModel{ctrl: ctrl}
	mock.recorder = &MockIAdSlotModelMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIAdSlotModel) EXPECT() *MockIAdSlotModelMockRecorder {
	return m.recorder
}

// GetAdSlotDetails mocks base method.
func (m *MockIAdSlotModel) GetAdSlotDetails(arg0 context.Context, arg1 *mongo.Client, arg2 string) (*datastore.AdSlot, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAdSlotDetails", arg0, arg1, arg2)
	ret0, _ := ret[0].(*datastore.AdSlot)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAdSlotDetails indicates an expected call of GetAdSlotDetails.
func (mr *MockIAdSlotModelMockRecorder) GetAdSlotDetails(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAdSlotDetails", reflect.TypeOf((*MockIAdSlotModel)(nil).GetAdSlotDetails), arg0, arg1, arg2)
}
