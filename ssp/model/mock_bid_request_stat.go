// Code generated by MockGen. DO NOT EDIT.
// Source: ssp/model (interfaces: IBidRequestStatModel)

// Package model is a generated GoMock package.
package model

import (
	context "context"
	reflect "reflect"
	mongo "ssp/lib/mongo"
	datastore "ssp/model/datastore"

	gomock "github.com/golang/mock/gomock"
)

// MockIBidRequestStatModel is a mock of IBidRequestStatModel interface.
type MockIBidRequestStatModel struct {
	ctrl     *gomock.Controller
	recorder *MockIBidRequestStatModelMockRecorder
}

// MockIBidRequestStatModelMockRecorder is the mock recorder for MockIBidRequestStatModel.
type MockIBidRequestStatModelMockRecorder struct {
	mock *MockIBidRequestStatModel
}

// NewMockIBidRequestStatModel creates a new mock instance.
func NewMockIBidRequestStatModel(ctrl *gomock.Controller) *MockIBidRequestStatModel {
	mock := &MockIBidRequestStatModel{ctrl: ctrl}
	mock.recorder = &MockIBidRequestStatModelMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIBidRequestStatModel) EXPECT() *MockIBidRequestStatModelMockRecorder {
	return m.recorder
}

// GetBidRequestStat mocks base method.
func (m *MockIBidRequestStatModel) GetBidRequestStat(arg0 context.Context, arg1 *mongo.Client, arg2 string) (*datastore.BidRequestStat, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBidRequestStat", arg0, arg1, arg2)
	ret0, _ := ret[0].(*datastore.BidRequestStat)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetBidRequestStat indicates an expected call of GetBidRequestStat.
func (mr *MockIBidRequestStatModelMockRecorder) GetBidRequestStat(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBidRequestStat", reflect.TypeOf((*MockIBidRequestStatModel)(nil).GetBidRequestStat), arg0, arg1, arg2)
}

// SaveBidRequestStat mocks base method.
func (m *MockIBidRequestStatModel) SaveBidRequestStat(arg0 context.Context, arg1 *mongo.Client, arg2 *datastore.BidRequestStat) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveBidRequestStat", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// SaveBidRequestStat indicates an expected call of SaveBidRequestStat.
func (mr *MockIBidRequestStatModelMockRecorder) SaveBidRequestStat(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveBidRequestStat", reflect.TypeOf((*MockIBidRequestStatModel)(nil).SaveBidRequestStat), arg0, arg1, arg2)
}

// UpdateImpression mocks base method.
func (m *MockIBidRequestStatModel) UpdateImpression(arg0 context.Context, arg1 *mongo.Client, arg2 string, arg3 *datastore.BidRequestStat) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateImpression", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateImpression indicates an expected call of UpdateImpression.
func (mr *MockIBidRequestStatModelMockRecorder) UpdateImpression(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateImpression", reflect.TypeOf((*MockIBidRequestStatModel)(nil).UpdateImpression), arg0, arg1, arg2, arg3)
}
